from ovs.dal.dataobject import DataObject
from ovs.dal.pmachine import PMachine
from ovs.hypervisor.factory import Factory as HVFactory
from volumedriver import voldrv

# Example
class VMachine(DataObject):
    _blueprint = {'name'         : None,
                  'description'  : '',
                  'hypervisor_id : 0}                              # examples: myVM.computenode.name
    _relations = {'computenode'  : (PMachine, 'guest_machines'),   #           myComputeNode.guest_machines[0].name
                  'storagenode'  : (PMachine, 'stored_machines')}  #           myComputeNode.guest_machines[0].computenode.name
    _expiry = {'status' : 30,  # Timeout in seconds of these properties
               'iops'   : 5}

    @property
    def status(self):
        def get_data():
            # Actual code to load the property of the backend.
            return HVFactory.get(self.computenode.type).getstatus(self.hypervisor_id)
        return self._backend_property(get_data)

    @property
    def iops(self):
        def get_data():
            # Actual code to load the property of the backend.
            iops = 0
            for disk in self.disks:  # disks might be a relation property defined on the Disk object
                iops += voldrv.getiops(disk.voldrv_id)
            return iops
        return self._backend_property(get_data)
